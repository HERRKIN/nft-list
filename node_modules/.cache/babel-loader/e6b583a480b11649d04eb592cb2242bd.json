{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Redelegation = void 0;\n\nvar json_1 = require(\"../../util/json\");\n\nvar numeric_1 = require(\"../numeric\");\n/**\n * A redelegation is when a delegator decides to stop staking with one validator and\n * transfer their delegation to another validator. Rather than unbonding (which takes\n * some time) and re-staking, the funds can be redelegated immediately if a\n * [[Redelegation.Entry]] can be created.\n *\n * A redelegation, like an unbonding delegation, is implemented through\n * [[Redelegation.Entry]] objects, limited by the `max_entry` parameter in the staking\n * module params. For each pair of source and target validators, you cannot redelegate\n * more times than the amount of entries. Entries are cleared when the redelegation is\n * completed, the same amount of time as unbonding.\n */\n\n\nvar Redelegation =\n/** @class */\nfunction (_super) {\n  __extends(Redelegation, _super);\n  /**\n   *\n   * @param delegator_address delegator's account address\n   * @param validator_src_address source validator's operator address (from)\n   * @param validator_dst_address target validator's operator address (to)\n   * @param entries entries\n   */\n\n\n  function Redelegation(delegator_address, validator_src_address, validator_dst_address, entries) {\n    var _this = _super.call(this) || this;\n\n    _this.delegator_address = delegator_address;\n    _this.validator_src_address = validator_src_address;\n    _this.validator_dst_address = validator_dst_address;\n    _this.entries = entries;\n    return _this;\n  }\n\n  Redelegation.fromData = function (data) {\n    var _a = data.redelegation,\n        delegator_address = _a.delegator_address,\n        validator_src_address = _a.validator_src_address,\n        validator_dst_address = _a.validator_dst_address,\n        entries = data.entries;\n    return new Redelegation(delegator_address, validator_src_address, validator_dst_address, entries.map(function (e) {\n      return Redelegation.Entry.fromData(e);\n    }));\n  };\n\n  Redelegation.prototype.toData = function () {\n    var _a = this,\n        delegator_address = _a.delegator_address,\n        validator_src_address = _a.validator_src_address,\n        validator_dst_address = _a.validator_dst_address,\n        entries = _a.entries;\n\n    return {\n      redelegation: {\n        delegator_address: delegator_address,\n        validator_src_address: validator_src_address,\n        validator_dst_address: validator_dst_address\n      },\n      entries: entries.map(function (e) {\n        return e.toData();\n      })\n    };\n  };\n\n  return Redelegation;\n}(json_1.JSONSerializable);\n\nexports.Redelegation = Redelegation;\n\n(function (Redelegation) {\n  var Entry =\n  /** @class */\n  function (_super) {\n    __extends(Entry, _super);\n    /**\n     *\n     * @param initial_balance balance of delegation prior to initiating redelegation\n     * @param balance \tbalance of delegation after initiating redelegation\n     * @param shares_dst\n     * @param creation_height \theight of blockchain when entry was created\n     * @param completion_time time when redelegation entry will be removed\n     */\n\n\n    function Entry(initial_balance, balance, shares_dst, creation_height, completion_time) {\n      var _this = _super.call(this) || this;\n\n      _this.initial_balance = initial_balance;\n      _this.balance = balance;\n      _this.shares_dst = shares_dst;\n      _this.creation_height = creation_height;\n      _this.completion_time = completion_time;\n      return _this;\n    }\n\n    Entry.prototype.toData = function () {\n      return {\n        redelegation_entry: {\n          initial_balance: this.initial_balance.toString(),\n          shares_dst: this.shares_dst.toString(),\n          creation_height: this.creation_height,\n          completion_time: this.completion_time.toISOString()\n        },\n        balance: this.balance.toString()\n      };\n    };\n\n    Entry.fromData = function (data) {\n      var _a = data.redelegation_entry,\n          initial_balance = _a.initial_balance,\n          shares_dst = _a.shares_dst,\n          creation_height = _a.creation_height,\n          completion_time = _a.completion_time,\n          balance = data.balance;\n      return new Entry(new numeric_1.Int(initial_balance), new numeric_1.Int(balance), new numeric_1.Dec(shares_dst), creation_height, new Date(completion_time));\n    };\n\n    return Entry;\n  }(json_1.JSONSerializable);\n\n  Redelegation.Entry = Entry;\n})(Redelegation = exports.Redelegation || (exports.Redelegation = {}));\n\nexports.Redelegation = Redelegation;","map":{"version":3,"sources":["../../../src/core/staking/Redelegation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Redelegation = void 0;\nvar json_1 = require(\"../../util/json\");\nvar numeric_1 = require(\"../numeric\");\n/**\n * A redelegation is when a delegator decides to stop staking with one validator and\n * transfer their delegation to another validator. Rather than unbonding (which takes\n * some time) and re-staking, the funds can be redelegated immediately if a\n * [[Redelegation.Entry]] can be created.\n *\n * A redelegation, like an unbonding delegation, is implemented through\n * [[Redelegation.Entry]] objects, limited by the `max_entry` parameter in the staking\n * module params. For each pair of source and target validators, you cannot redelegate\n * more times than the amount of entries. Entries are cleared when the redelegation is\n * completed, the same amount of time as unbonding.\n */\nvar Redelegation = /** @class */ (function (_super) {\n    __extends(Redelegation, _super);\n    /**\n     *\n     * @param delegator_address delegator's account address\n     * @param validator_src_address source validator's operator address (from)\n     * @param validator_dst_address target validator's operator address (to)\n     * @param entries entries\n     */\n    function Redelegation(delegator_address, validator_src_address, validator_dst_address, entries) {\n        var _this = _super.call(this) || this;\n        _this.delegator_address = delegator_address;\n        _this.validator_src_address = validator_src_address;\n        _this.validator_dst_address = validator_dst_address;\n        _this.entries = entries;\n        return _this;\n    }\n    Redelegation.fromData = function (data) {\n        var _a = data.redelegation, delegator_address = _a.delegator_address, validator_src_address = _a.validator_src_address, validator_dst_address = _a.validator_dst_address, entries = data.entries;\n        return new Redelegation(delegator_address, validator_src_address, validator_dst_address, entries.map(function (e) { return Redelegation.Entry.fromData(e); }));\n    };\n    Redelegation.prototype.toData = function () {\n        var _a = this, delegator_address = _a.delegator_address, validator_src_address = _a.validator_src_address, validator_dst_address = _a.validator_dst_address, entries = _a.entries;\n        return {\n            redelegation: {\n                delegator_address: delegator_address,\n                validator_src_address: validator_src_address,\n                validator_dst_address: validator_dst_address,\n            },\n            entries: entries.map(function (e) { return e.toData(); }),\n        };\n    };\n    return Redelegation;\n}(json_1.JSONSerializable));\nexports.Redelegation = Redelegation;\n(function (Redelegation) {\n    var Entry = /** @class */ (function (_super) {\n        __extends(Entry, _super);\n        /**\n         *\n         * @param initial_balance balance of delegation prior to initiating redelegation\n         * @param balance \tbalance of delegation after initiating redelegation\n         * @param shares_dst\n         * @param creation_height \theight of blockchain when entry was created\n         * @param completion_time time when redelegation entry will be removed\n         */\n        function Entry(initial_balance, balance, shares_dst, creation_height, completion_time) {\n            var _this = _super.call(this) || this;\n            _this.initial_balance = initial_balance;\n            _this.balance = balance;\n            _this.shares_dst = shares_dst;\n            _this.creation_height = creation_height;\n            _this.completion_time = completion_time;\n            return _this;\n        }\n        Entry.prototype.toData = function () {\n            return {\n                redelegation_entry: {\n                    initial_balance: this.initial_balance.toString(),\n                    shares_dst: this.shares_dst.toString(),\n                    creation_height: this.creation_height,\n                    completion_time: this.completion_time.toISOString(),\n                },\n                balance: this.balance.toString(),\n            };\n        };\n        Entry.fromData = function (data) {\n            var _a = data.redelegation_entry, initial_balance = _a.initial_balance, shares_dst = _a.shares_dst, creation_height = _a.creation_height, completion_time = _a.completion_time, balance = data.balance;\n            return new Entry(new numeric_1.Int(initial_balance), new numeric_1.Int(balance), new numeric_1.Dec(shares_dst), creation_height, new Date(completion_time));\n        };\n        return Entry;\n    }(json_1.JSONSerializable));\n    Redelegation.Entry = Entry;\n})(Redelegation = exports.Redelegation || (exports.Redelegation = {}));\nexports.Redelegation = Redelegation;\n//# sourceMappingURL=Redelegation.js.map"]},"metadata":{},"sourceType":"script"}