{"ast":null,"code":"var _jsxFileName = \"/Users/farouk/Documents/Work/DeviantsFactions/testchamber/nft-list/src/components/ConnectSample.tsx\",\n    _s = $RefreshSig$();\n\nimport { useWallet, WalletStatus } from '@terra-money/wallet-provider';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ConnectSample() {\n  _s();\n\n  const {\n    status,\n    network,\n    wallets,\n    availableConnectTypes,\n    availableInstallTypes,\n    connect,\n    install,\n    disconnect\n  } = useWallet();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect Sample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify({\n          status,\n          network,\n          wallets,\n          availableConnectTypes,\n          availableInstallTypes\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [status === WalletStatus.WALLET_NOT_CONNECTED && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [availableInstallTypes.map(connectType => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => install(connectType),\n          children: [\"Install \", connectType]\n        }, 'install-' + connectType, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)), availableConnectTypes.map(connectType => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => connect(connectType),\n          children: [\"Connect \", connectType]\n        }, 'connect-' + connectType, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), status === WalletStatus.WALLET_CONNECTED && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => disconnect(),\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConnectSample, \"/VY4khUYcVDu36BMdLTQZWhfZxs=\", false, function () {\n  return [useWallet];\n});\n\n_c = ConnectSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectSample\");","map":{"version":3,"sources":["/Users/farouk/Documents/Work/DeviantsFactions/testchamber/nft-list/src/components/ConnectSample.tsx"],"names":["useWallet","WalletStatus","React","ConnectSample","status","network","wallets","availableConnectTypes","availableInstallTypes","connect","install","disconnect","JSON","stringify","WALLET_NOT_CONNECTED","map","connectType","WALLET_CONNECTED"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,8BAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,qBAJI;AAKJC,IAAAA,qBALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA;AARI,MASFX,SAAS,EATb;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,kBACGY,IAAI,CAACC,SAAL,CACC;AACET,UAAAA,MADF;AAEEC,UAAAA,OAFF;AAGEC,UAAAA,OAHF;AAIEC,UAAAA,qBAJF;AAKEC,UAAAA;AALF,SADD,EAQC,IARD,EASC,CATD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE;AAAA,iBACGJ,MAAM,KAAKH,YAAY,CAACa,oBAAxB,iBACC;AAAA,mBACGN,qBAAqB,CAACO,GAAtB,CAA2BC,WAAD,iBACzB;AAEE,UAAA,OAAO,EAAE,MAAMN,OAAO,CAACM,WAAD,CAFxB;AAAA,iCAIWA,WAJX;AAAA,WACO,aAAaA,WADpB;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,EASGT,qBAAqB,CAACQ,GAAtB,CAA2BC,WAAD,iBACzB;AAEE,UAAA,OAAO,EAAE,MAAMP,OAAO,CAACO,WAAD,CAFxB;AAAA,iCAIWA,WAJX;AAAA,WACO,aAAaA,WADpB;AAAA;AAAA;AAAA;AAAA,gBADD,CATH;AAAA,sBAFJ,EAqBGZ,MAAM,KAAKH,YAAY,CAACgB,gBAAxB,iBACC;AAAQ,QAAA,OAAO,EAAE,MAAMN,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;GA1DeR,a;UAUVH,S;;;KAVUG,a","sourcesContent":["import { useWallet, WalletStatus } from '@terra-money/wallet-provider';\nimport React from 'react';\n\nexport function ConnectSample() {\n  const {\n    status,\n    network,\n    wallets,\n    availableConnectTypes,\n    availableInstallTypes,\n    connect,\n    install,\n    disconnect,\n  } = useWallet();\n\n  return (\n    <div>\n      <h1>Connect Sample</h1>\n      <section>\n        <pre>\n          {JSON.stringify(\n            {\n              status,\n              network,\n              wallets,\n              availableConnectTypes,\n              availableInstallTypes,\n            },\n            null,\n            2,\n          )}\n        </pre>\n      </section>\n\n      <footer>\n        {status === WalletStatus.WALLET_NOT_CONNECTED && (\n          <>\n            {availableInstallTypes.map((connectType) => (\n              <button\n                key={'install-' + connectType}\n                onClick={() => install(connectType)}\n              >\n                Install {connectType}\n              </button>\n            ))}\n            {availableConnectTypes.map((connectType) => (\n              <button\n                key={'connect-' + connectType}\n                onClick={() => connect(connectType)}\n              >\n                Connect {connectType}\n              </button>\n            ))}\n          </>\n        )}\n        {status === WalletStatus.WALLET_CONNECTED && (\n          <button onClick={() => disconnect()}>Disconnect</button>\n        )}\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}