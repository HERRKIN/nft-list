{"ast":null,"code":"import bowser from 'bowser';\nimport MobileDetect from 'mobile-detect';\n/**\n * @deprecated use instead of <WalletProvider dangerously__chromeExtensionCompatibleBrowserCheck={} />\n */\n\nexport function isMathWallet(userAgent) {\n  return /MathWallet\\//.test(userAgent);\n}\nexport const isMobile = () => {\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n  return !!mobileDetect.os();\n};\nexport const isDesktopChrome = isChromeExtensionCompatibleBrowser => {\n  const userAgent = navigator.userAgent;\n\n  if (isChromeExtensionCompatibleBrowser) {\n    return true;\n  }\n\n  const browser = bowser.getParser(userAgent);\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n  return !!(browser.satisfies({\n    chrome: '>60',\n    edge: '>80'\n  }) && !mobileDetect.os());\n};","map":{"version":3,"sources":["../../../src/@terra-dev/browser-check/index.ts"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,QAAnB;AACA,OAAO,YAAP,MAAyB,eAAzB;AAEA;;AAEG;;AACH,OAAM,SAAU,YAAV,CAAuB,SAAvB,EAAwC;AAC5C,SAAO,eAAe,IAAf,CAAoB,SAApB,CAAP;AACD;AAED,OAAO,MAAM,QAAQ,GAAG,MAAK;AAC3B,QAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,SAAS,CAAC,SAA3B,CAArB;AAEA,SAAO,CAAC,CAAC,YAAY,CAAC,EAAb,EAAT;AACD,CAJM;AAMP,OAAO,MAAM,eAAe,GAC1B,kCAD6B,IAElB;AACX,QAAM,SAAS,GAAG,SAAS,CAAC,SAA5B;;AAEA,MAAI,kCAAJ,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,QAAM,OAAO,GAAG,MAAM,CAAC,SAAP,CAAiB,SAAjB,CAAhB;AACA,QAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,SAAS,CAAC,SAA3B,CAArB;AAEA,SAAO,CAAC,EACN,OAAO,CAAC,SAAR,CAAkB;AAChB,IAAA,MAAM,EAAE,KADQ;AAEhB,IAAA,IAAI,EAAE;AAFU,GAAlB,KAGM,CAAC,YAAY,CAAC,EAAb,EAJD,CAAR;AAMD,CAlBM","sourcesContent":["import bowser from 'bowser';\nimport MobileDetect from 'mobile-detect';\n\n/**\n * @deprecated use instead of <WalletProvider dangerously__chromeExtensionCompatibleBrowserCheck={} />\n */\nexport function isMathWallet(userAgent: string) {\n  return /MathWallet\\//.test(userAgent);\n}\n\nexport const isMobile = () => {\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n\n  return !!mobileDetect.os();\n};\n\nexport const isDesktopChrome = (\n  isChromeExtensionCompatibleBrowser: boolean,\n): boolean => {\n  const userAgent = navigator.userAgent;\n\n  if (isChromeExtensionCompatibleBrowser) {\n    return true;\n  }\n\n  const browser = bowser.getParser(userAgent);\n  const mobileDetect = new MobileDetect(navigator.userAgent);\n\n  return !!(\n    browser.satisfies({\n      chrome: '>60',\n      edge: '>80',\n    }) && !mobileDetect.os()\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}